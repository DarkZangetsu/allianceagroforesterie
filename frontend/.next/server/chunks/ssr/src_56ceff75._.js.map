{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Fitahiana/Documents/GitHub/Agri-Geo/frontend/src/lib/graphql-queries.js"],"sourcesContent":["import { gql } from '@apollo/client';\r\n\r\n// Queries\r\nexport const GET_ME = gql`\r\n  query GetMe {\r\n    me {\r\n      id\r\n      email\r\n      role\r\n      logo\r\n      abreviation\r\n      nomInstitution\r\n      nomProjet\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_MY_PARCELLES = gql`\r\n  query GetMyParcelles {\r\n    myParcelles {\r\n      id\r\n      nom\r\n      nomPersonneReferente\r\n      poste\r\n      telephone\r\n      email\r\n      geojson\r\n      superficie\r\n      pratique\r\n      nomProjet\r\n      description\r\n      createdAt\r\n      updatedAt\r\n      user {\r\n        id\r\n        email\r\n        logo\r\n        abreviation\r\n        nomInstitution\r\n        nomProjet\r\n      }\r\n      images {\r\n        id\r\n        image\r\n        ordre\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_ALL_PARCELLES = gql`\r\n  query GetAllParcelles {\r\n    allParcelles {\r\n      id\r\n      nom\r\n      nomPersonneReferente\r\n      poste\r\n      telephone\r\n      email\r\n      geojson\r\n      superficie\r\n      pratique\r\n      nomProjet\r\n      description\r\n      createdAt\r\n      updatedAt\r\n      user {\r\n        id\r\n        email\r\n        logo\r\n        abreviation\r\n        nomInstitution\r\n        nomProjet\r\n      }\r\n      images {\r\n        id\r\n        image\r\n        ordre\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_PARCELLE = gql`\r\n  query GetParcelle($id: ID!) {\r\n    parcelle(id: $id) {\r\n      id\r\n      nom\r\n      nomPersonneReferente\r\n      poste\r\n      telephone\r\n      email\r\n      geojson\r\n      superficie\r\n      pratique\r\n      nomProjet\r\n      description\r\n      createdAt\r\n      updatedAt\r\n      user {\r\n        id\r\n        email\r\n        logo\r\n        abreviation\r\n        nomInstitution\r\n        nomProjet\r\n      }\r\n      images {\r\n        id\r\n        image\r\n        ordre\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_ALL_USERS = gql`\r\n  query GetAllUsers {\r\n    allUsers {\r\n      id\r\n      email\r\n      role\r\n      logo\r\n      abreviation\r\n      nomInstitution\r\n      nomProjet\r\n      dateJoined\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_MY_SIEGES = gql`\r\n  query GetMySieges {\r\n    mySieges {\r\n      id\r\n      nom\r\n      nomProjet\r\n      adresse\r\n      latitude\r\n      longitude\r\n      description\r\n      categorie\r\n      nomPointContact\r\n      poste\r\n      telephone\r\n      email\r\n      horaireMatin\r\n      horaireApresMidi\r\n      createdAt\r\n      updatedAt\r\n      user {\r\n        id\r\n        email\r\n        logo\r\n      }\r\n      photosBatiment {\r\n        id\r\n        image\r\n        titre\r\n        description\r\n        ordre\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_ALL_SIEGES = gql`\r\n  query GetAllSieges {\r\n    allSieges {\r\n      id\r\n      nom\r\n      nomProjet\r\n      adresse\r\n      latitude\r\n      longitude\r\n      description\r\n      categorie\r\n      nomPointContact\r\n      poste\r\n      telephone\r\n      email\r\n      horaireMatin\r\n      horaireApresMidi\r\n      createdAt\r\n      updatedAt\r\n      user {\r\n        id\r\n        email\r\n        logo\r\n        abreviation\r\n        nomInstitution\r\n        nomProjet\r\n      }\r\n      photosBatiment {\r\n        id\r\n        image\r\n        titre\r\n        description\r\n        ordre\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_SIEGE = gql`\r\n  query GetSiege($id: ID!) {\r\n    siege(id: $id) {\r\n      id\r\n      nom\r\n      nomProjet\r\n      adresse\r\n      latitude\r\n      longitude\r\n      description\r\n      categorie\r\n      nomPointContact\r\n      poste\r\n      telephone\r\n      email\r\n      horaireMatin\r\n      horaireApresMidi\r\n      createdAt\r\n      updatedAt\r\n      user {\r\n        id\r\n        email\r\n        logo\r\n        abreviation\r\n        nomInstitution\r\n        nomProjet\r\n      }\r\n      photosBatiment {\r\n        id\r\n        image\r\n        titre\r\n        description\r\n        ordre\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// Nouvelles queries pour Pépinière\r\nexport const GET_MY_PEPINIERES = gql`\r\n  query GetMyPepinieres {\r\n    myPepinieres {\r\n      id\r\n      nom\r\n      adresse\r\n      latitude\r\n      longitude\r\n      description\r\n      nomGestionnaire\r\n      posteGestionnaire\r\n      telephoneGestionnaire\r\n      emailGestionnaire\r\n      especesProduites\r\n      nomProjet\r\n      quantiteProductionGenerale\r\n      createdAt\r\n      updatedAt\r\n      user {\r\n        id\r\n        email\r\n        logo\r\n        abreviation\r\n        nomInstitution\r\n        nomProjet\r\n      }\r\n      photos {\r\n        id\r\n        image\r\n        titre\r\n        description\r\n        ordre\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_ALL_PEPINIERES = gql`\r\n  query GetAllPepinieres {\r\n    allPepinieres {\r\n      id\r\n      nom\r\n      adresse\r\n      latitude\r\n      longitude\r\n      description\r\n      nomGestionnaire\r\n      posteGestionnaire\r\n      telephoneGestionnaire\r\n      emailGestionnaire\r\n      especesProduites\r\n      nomProjet\r\n      quantiteProductionGenerale\r\n      createdAt\r\n      updatedAt\r\n      user {\r\n        id\r\n        email\r\n        logo\r\n        abreviation\r\n        nomInstitution\r\n        nomProjet\r\n      }\r\n      photos {\r\n        id\r\n        image\r\n        titre\r\n        description\r\n        ordre\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_PEPINIERE = gql`\r\n  query GetPepiniere($id: ID!) {\r\n    pepiniere(id: $id) {\r\n      id\r\n      nom\r\n      adresse\r\n      latitude\r\n      longitude\r\n      description\r\n      nomGestionnaire\r\n      posteGestionnaire\r\n      telephoneGestionnaire\r\n      emailGestionnaire\r\n      especesProduites\r\n      nomProjet\r\n      quantiteProductionGenerale\r\n      createdAt\r\n      updatedAt\r\n      user {\r\n        id\r\n        email\r\n        logo\r\n        abreviation\r\n        nomInstitution\r\n        nomProjet\r\n      }\r\n      photos {\r\n        id\r\n        image\r\n        titre\r\n        description\r\n        ordre\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// Mutations\r\nexport const CREATE_USER = gql`\r\n  mutation CreateUser(\r\n    $email: String!\r\n    $password: String!\r\n    $abreviation: String\r\n    $role: String\r\n    $logo: Upload\r\n    $nomInstitution: String\r\n    $nomProjet: String\r\n  ) {\r\n    createUser(\r\n      email: $email\r\n      password: $password\r\n      abreviation: $abreviation\r\n      role: $role\r\n      logo: $logo\r\n      nomInstitution: $nomInstitution\r\n      nomProjet: $nomProjet\r\n    ) {\r\n      success\r\n      message\r\n      user {\r\n        id\r\n        email\r\n        abreviation\r\n        role\r\n        logo\r\n        nomInstitution\r\n        nomProjet\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LOGIN_USER = gql`\r\n  mutation LoginUser($email: String!, $password: String!) {\r\n    loginUser(email: $email, password: $password) {\r\n      success\r\n      message\r\n      token\r\n      user {\r\n        id\r\n        email\r\n        role\r\n        logo\r\n        nomInstitution\r\n        nomProjet\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_PARCELLE = gql`\r\n  mutation CreateParcelle(\r\n    $nom: String!\r\n    $geojson: JSONString!\r\n    $superficie: Decimal\r\n    $pratique: String\r\n    $nomProjet: String\r\n    $description: String\r\n    $images: [Upload]\r\n    $nomPersonneReferente: String\r\n    $poste: String\r\n    $telephone: String\r\n    $email: String\r\n  ) {\r\n    createParcelle(\r\n      nom: $nom\r\n      geojson: $geojson\r\n      superficie: $superficie\r\n      pratique: $pratique\r\n      nomProjet: $nomProjet\r\n      description: $description\r\n      images: $images\r\n      nomPersonneReferente: $nomPersonneReferente\r\n      poste: $poste\r\n      telephone: $telephone\r\n      email: $email\r\n    ) {\r\n      success\r\n      message\r\n      parcelle {\r\n        id\r\n        nom\r\n        nomPersonneReferente\r\n        poste\r\n        telephone\r\n        email\r\n        geojson\r\n        superficie\r\n        pratique\r\n        nomProjet\r\n        description\r\n        createdAt\r\n        updatedAt\r\n        user {\r\n          id\r\n          email\r\n          logo\r\n          abreviation\r\n          nomInstitution\r\n          nomProjet\r\n        }\r\n        images {\r\n          id\r\n          image\r\n          ordre\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_PARCELLE = gql`\r\n  mutation UpdateParcelle(\r\n    $id: ID!\r\n    $nom: String\r\n    $geojson: JSONString\r\n    $superficie: Decimal\r\n    $pratique: String\r\n    $nomProjet: String\r\n    $description: String\r\n    $images: [Upload]\r\n    $nomPersonneReferente: String\r\n    $poste: String\r\n    $telephone: String\r\n    $email: String\r\n  ) {\r\n    updateParcelle(\r\n      id: $id\r\n      nom: $nom\r\n      geojson: $geojson\r\n      superficie: $superficie\r\n      pratique: $pratique\r\n      nomProjet: $nomProjet\r\n      description: $description\r\n      images: $images\r\n      nomPersonneReferente: $nomPersonneReferente\r\n      poste: $poste\r\n      telephone: $telephone\r\n      email: $email\r\n    ) {\r\n      success\r\n      message\r\n      parcelle {\r\n        id\r\n        nom\r\n        nomPersonneReferente\r\n        poste\r\n        telephone\r\n        email\r\n        geojson\r\n        superficie\r\n        pratique\r\n        nomProjet\r\n        description\r\n        createdAt\r\n        updatedAt\r\n        user {\r\n          id\r\n          email\r\n          logo\r\n          abreviation\r\n          nomInstitution\r\n          nomProjet\r\n        }\r\n        images {\r\n          id\r\n          image\r\n          ordre\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_PARCELLE = gql`\r\n  mutation DeleteParcelle($id: ID!) {\r\n    deleteParcelle(id: $id) {\r\n      success\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\n// Mutations JWT\r\nexport const TOKEN_AUTH = gql`\r\n  mutation TokenAuth($username: String!, $password: String!) {\r\n    tokenAuth(username: $username, password: $password) {\r\n      token\r\n      refreshToken\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TOKEN_AUTH_WITH_USER = gql`\r\n  mutation TokenAuthWithUser($email: String!, $password: String!) {\r\n    tokenAuthWithUser(email: $email, password: $password) {\r\n      token\r\n      refreshToken\r\n      user {\r\n        id\r\n        email\r\n        role\r\n        logo\r\n        nomInstitution\r\n        nomProjet\r\n      }\r\n      success\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nexport const VERIFY_TOKEN = gql`\r\n  mutation VerifyToken($token: String!) {\r\n    verifyToken(token: $token) {\r\n      payload\r\n    }\r\n  }\r\n`;\r\n\r\nexport const REFRESH_TOKEN = gql`\r\n  mutation RefreshToken($refreshToken: String!) {\r\n    refreshToken(refreshToken: $refreshToken) {\r\n      token\r\n      payload\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_SIEGE = gql`\r\n  mutation CreateSiege(\r\n    $nom: String!\r\n    $adresse: String!\r\n    $latitude: Decimal!\r\n    $longitude: Decimal!\r\n    $description: String\r\n    $categorie: String\r\n    $nomPointContact: String\r\n    $poste: String\r\n    $telephone: String\r\n    $email: String\r\n    $nomProjet: String\r\n    $horaireMatin: String\r\n    $horaireApresMidi: String\r\n    $photosBatiment: [Upload]\r\n  ) {\r\n    createSiege(\r\n      nom: $nom\r\n      adresse: $adresse\r\n      latitude: $latitude\r\n      longitude: $longitude\r\n      description: $description\r\n      categorie: $categorie\r\n      nomPointContact: $nomPointContact\r\n      poste: $poste\r\n      telephone: $telephone\r\n      email: $email\r\n      nomProjet: $nomProjet\r\n      horaireMatin: $horaireMatin\r\n      horaireApresMidi: $horaireApresMidi\r\n      photosBatiment: $photosBatiment\r\n    ) {\r\n      success\r\n      message\r\n      siege {\r\n        id\r\n        nom\r\n        nomProjet\r\n        adresse\r\n        latitude\r\n        longitude\r\n        description\r\n        categorie\r\n        nomPointContact\r\n        poste\r\n        telephone\r\n        email\r\n        horaireMatin\r\n        horaireApresMidi\r\n        createdAt\r\n        updatedAt\r\n        user {\r\n          id\r\n          email\r\n        }\r\n        photosBatiment {\r\n          id\r\n          image\r\n          titre\r\n          description\r\n          ordre\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_SIEGE = gql`\r\n  mutation UpdateSiege(\r\n    $id: ID!\r\n    $nom: String\r\n    $adresse: String\r\n    $latitude: Decimal\r\n    $longitude: Decimal\r\n    $description: String\r\n    $categorie: String\r\n    $nomPointContact: String\r\n    $poste: String\r\n    $telephone: String\r\n    $email: String\r\n    $nomProjet: String\r\n    $horaireMatin: String\r\n    $horaireApresMidi: String\r\n    $photosBatiment: [Upload]\r\n  ) {\r\n    updateSiege(\r\n      id: $id\r\n      nom: $nom\r\n      adresse: $adresse\r\n      latitude: $latitude\r\n      longitude: $longitude\r\n      description: $description\r\n      categorie: $categorie\r\n      nomPointContact: $nomPointContact\r\n      poste: $poste\r\n      telephone: $telephone\r\n      email: $email\r\n      nomProjet: $nomProjet\r\n      horaireMatin: $horaireMatin\r\n      horaireApresMidi: $horaireApresMidi\r\n      photosBatiment: $photosBatiment\r\n    ) {\r\n      success\r\n      message\r\n      siege {\r\n        id\r\n        nom\r\n        nomProjet\r\n        adresse\r\n        latitude\r\n        longitude\r\n        description\r\n        categorie\r\n        nomPointContact\r\n        poste\r\n        telephone\r\n        email\r\n        horaireMatin\r\n        horaireApresMidi\r\n        createdAt\r\n        updatedAt\r\n        user {\r\n          id\r\n          email\r\n        }\r\n        photosBatiment {\r\n          id\r\n          image\r\n          titre\r\n          description\r\n          ordre\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_SIEGE = gql`\r\n  mutation DeleteSiege($id: ID!) {\r\n    deleteSiege(id: $id) {\r\n      success\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\n// Nouvelles mutations pour Pépinière\r\nexport const CREATE_PEPINIERE = gql`\r\n  mutation CreatePepiniere(\r\n    $nom: String!\r\n    $adresse: String!\r\n    $latitude: Decimal!\r\n    $longitude: Decimal!\r\n    $description: String\r\n    $nomGestionnaire: String\r\n    $posteGestionnaire: String\r\n    $telephoneGestionnaire: String\r\n    $emailGestionnaire: String\r\n    $especesProduites: String\r\n    $nomProjet: String\r\n    $quantiteProductionGenerale: String\r\n    $photos: [Upload]\r\n  ) {\r\n    createPepiniere(\r\n      nom: $nom\r\n      adresse: $adresse\r\n      latitude: $latitude\r\n      longitude: $longitude\r\n      description: $description\r\n      nomGestionnaire: $nomGestionnaire\r\n      posteGestionnaire: $posteGestionnaire\r\n      telephoneGestionnaire: $telephoneGestionnaire\r\n      emailGestionnaire: $emailGestionnaire\r\n      especesProduites: $especesProduites\r\n      nomProjet: $nomProjet\r\n      quantiteProductionGenerale: $quantiteProductionGenerale\r\n      photos: $photos\r\n    ) {\r\n      success\r\n      message\r\n      pepiniere {\r\n        id\r\n        nom\r\n        adresse\r\n        latitude\r\n        longitude\r\n        description\r\n        nomGestionnaire\r\n        posteGestionnaire\r\n        telephoneGestionnaire\r\n        emailGestionnaire\r\n        especesProduites\r\n        nomProjet\r\n        quantiteProductionGenerale\r\n        createdAt\r\n        updatedAt\r\n        user {\r\n          id\r\n          email\r\n        }\r\n        photos {\r\n          id\r\n          image\r\n          titre\r\n          description\r\n          ordre\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_PEPINIERE = gql`\r\n  mutation UpdatePepiniere(\r\n    $id: ID!\r\n    $nom: String\r\n    $adresse: String\r\n    $latitude: Decimal\r\n    $longitude: Decimal\r\n    $description: String\r\n    $nomGestionnaire: String\r\n    $posteGestionnaire: String\r\n    $telephoneGestionnaire: String\r\n    $emailGestionnaire: String\r\n    $especesProduites: String\r\n    $nomProjet: String\r\n    $quantiteProductionGenerale: String\r\n    $photos: [Upload]\r\n  ) {\r\n    updatePepiniere(\r\n      id: $id\r\n      nom: $nom\r\n      adresse: $adresse\r\n      latitude: $latitude\r\n      longitude: $longitude\r\n      description: $description\r\n      nomGestionnaire: $nomGestionnaire\r\n      posteGestionnaire: $posteGestionnaire\r\n      telephoneGestionnaire: $telephoneGestionnaire\r\n      emailGestionnaire: $emailGestionnaire\r\n      especesProduites: $especesProduites\r\n      nomProjet: $nomProjet\r\n      quantiteProductionGenerale: $quantiteProductionGenerale\r\n      photos: $photos\r\n    ) {\r\n      success\r\n      message\r\n      pepiniere {\r\n        id\r\n        nom\r\n        adresse\r\n        latitude\r\n        longitude\r\n        description\r\n        nomGestionnaire\r\n        posteGestionnaire\r\n        telephoneGestionnaire\r\n        emailGestionnaire\r\n        especesProduites\r\n        nomProjet\r\n        quantiteProductionGenerale\r\n        createdAt\r\n        updatedAt\r\n        user {\r\n          id\r\n          email\r\n        }\r\n        photos {\r\n          id\r\n          image\r\n          titre\r\n          description\r\n          ordre\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_PEPINIERE = gql`\r\n  mutation DeletePepiniere($id: ID!) {\r\n    deletePepiniere(id: $id) {\r\n      success\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\n// CSV Import/Export mutations\r\nexport const EXPORT_PARCELLES_CSV = gql`\r\n  mutation ExportParcellesCSV {\r\n    exportParcellesCsv {\r\n      success\r\n      message\r\n      csvData\r\n    }\r\n  }\r\n`;\r\n\r\nexport const IMPORT_PARCELLES_CSV = gql`\r\n  mutation ImportParcellesCSV($csvFile: Upload!) {\r\n    importParcellesCsv(csvFile: $csvFile) {\r\n      success\r\n      message\r\n      importedCount\r\n      errors\r\n    }\r\n  }\r\n`;\r\n\r\nexport const EXPORT_SIEGES_CSV = gql`\r\n  mutation ExportSiegesCSV {\r\n    exportSiegesCsv {\r\n      success\r\n      message\r\n      csvData\r\n    }\r\n  }\r\n`;\r\n\r\nexport const IMPORT_SIEGES_CSV = gql`\r\n  mutation ImportSiegesCSV($csvFile: Upload!) {\r\n    importSiegesCsv(csvFile: $csvFile) {\r\n      success\r\n      message\r\n      importedCount\r\n      errors\r\n    }\r\n  }\r\n`;\r\n\r\n// Nouvelles mutations CSV pour Pépinière\r\nexport const EXPORT_PEPINIERES_CSV = gql`\r\n  mutation ExportPepinieresCSV {\r\n    exportPepinieresCsv {\r\n      success\r\n      message\r\n      csvData\r\n    }\r\n  }\r\n`;\r\n\r\nexport const IMPORT_PEPINIERES_CSV = gql`\r\n  mutation ImportPepinieresCSV($csvFile: Upload!) {\r\n    importPepinieresCsv(csvFile: $csvFile) {\r\n      success\r\n      message\r\n      importedCount\r\n      errors\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_USER_ACTIVE_STATUS = gql`\r\n  mutation UpdateUserActiveStatus($userId: ID!, $isActive: Boolean!) {\r\n    updateUserActiveStatus(userId: $userId, isActive: $isActive) {\r\n      success\r\n      message\r\n      user {\r\n        id\r\n        isActive\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_USER_ABREVIATION = gql`\r\n  mutation UpdateUserAbreviation($userId: ID!, $abreviation: String!) {\r\n    updateUserAbreviation(userId: $userId, abreviation: $abreviation) {\r\n      success\r\n      message\r\n      user {\r\n        id\r\n        abreviation\r\n        email\r\n        logo\r\n        nomInstitution\r\n        nomProjet\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_USER_LOGO = gql`\r\n  mutation UpdateUserLogo($logo: Upload!) {\r\n    updateUserLogo(logo: $logo) {\r\n      success\r\n      message\r\n      user {\r\n        id\r\n        email\r\n        abreviation\r\n        logo\r\n        nomInstitution\r\n        nomProjet\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_USER_PROFILE = gql`\r\n  mutation UpdateUserProfile($nomInstitution: String, $nomProjet: String, $email: String) {\r\n    updateUserProfile(nomInstitution: $nomInstitution, nomProjet: $nomProjet, email: $email) {\r\n      success\r\n      message\r\n      user {\r\n        id\r\n        nomInstitution\r\n        nomProjet\r\n        email\r\n        abreviation\r\n        logo\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CHANGE_PASSWORD = gql`\r\n  mutation ChangePassword($oldPassword: String!, $newPassword: String!) {\r\n    changePassword(oldPassword: $oldPassword, newPassword: $newPassword) {\r\n      success\r\n      message\r\n    }\r\n  }\r\n`; "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1021, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Fitahiana/Documents/GitHub/Agri-Geo/frontend/src/components/PepiniereDetailModal.js"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState } from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { GET_PEPINIERE } from '../lib/graphql-queries';\r\nimport { getLogoUrl } from '../lib/utils';\r\n\r\nconst PepiniereDetailModal = ({ pepiniere, onClose }) => {\r\n  const [activeTab, setActiveTab] = useState('info');\r\n\r\n  // Charger les données complètes de la pépinière\r\n  const { data: pepiniereData, loading: pepiniereLoading, error: pepiniereError } = useQuery(GET_PEPINIERE, {\r\n    variables: { id: pepiniere?.id },\r\n    skip: !pepiniere?.id,\r\n    fetchPolicy: 'cache-and-network'\r\n  });\r\n\r\n  // Utiliser les données complètes si disponibles, sinon les données de base\r\n  const pepiniereComplete = pepiniereData?.pepiniere || pepiniere;\r\n\r\n  if (!pepiniere) return null;\r\n\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return '-';\r\n    return new Date(dateString).toLocaleDateString('fr-FR');\r\n  };\r\n\r\n  const exportToCsv = () => {\r\n    const data = [pepiniereComplete];\r\n    const csv = [\r\n      ['Nom', 'Adresse', 'Description', 'Latitude', 'Longitude', 'Gestionnaire', 'Téléphone', 'Email', 'Espèces produites', 'Production générale', 'Membre', 'Créé le', 'Modifié le'],\r\n      [\r\n        pepiniereComplete?.nom || '',\r\n        pepiniereComplete?.adresse || '',\r\n        pepiniereComplete?.description || '',\r\n        pepiniereComplete?.latitude || '',\r\n        pepiniereComplete?.longitude || '',\r\n        pepiniereComplete?.nomGestionnaire || '',\r\n        pepiniereComplete?.telephoneGestionnaire || '',\r\n        pepiniereComplete?.emailGestionnaire || '',\r\n        pepiniereComplete?.especesProduites || '',\r\n        pepiniereComplete?.quantiteProductionGenerale || '',\r\n        pepiniereComplete?.user ? `${pepiniereComplete.user.firstName || ''} ${pepiniereComplete.user.lastName || ''}` : '',\r\n        pepiniereComplete?.createdAt || '',\r\n        pepiniereComplete?.updatedAt || ''\r\n      ]\r\n    ];\r\n    const blob = new Blob([\r\n      csv.map(row => row.map(cell => `\"${String(cell).replace(/\"/g, '\"\"')}\"`).join(',')).join('\\n')\r\n    ], { type: 'text/csv' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `pepiniere_${pepiniereComplete?.nom || 'detail'}.csv`;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n  };\r\n\r\n  const tabs = [\r\n    { id: 'info', label: 'Informations', icon: '📋' },\r\n    { \r\n      id: 'photos', \r\n      label: 'Photos', \r\n      icon: '📷',\r\n      count: Array.isArray(pepiniereComplete?.photos) ? pepiniereComplete.photos.length : 0\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 overflow-hidden\">\r\n      {/* Backdrop avec effet de flou */}\r\n      <div \r\n        className=\"absolute inset-0 bg-black/20 backdrop-blur-sm transition-all duration-300\"\r\n        onClick={onClose}\r\n      />\r\n      \r\n      {/* Container principal */}\r\n      <div className=\"flex items-center justify-center min-h-screen p-4\">\r\n        <div className=\"relative bg-white/95 backdrop-blur-xl rounded-3xl shadow-2xl border border-white/20 w-full max-w-5xl max-h-[90vh] overflow-hidden animate-in slide-in-from-bottom-4 duration-300 flex flex-col\">\r\n          \r\n          {/* Header avec gradient subtil - Fixe */}\r\n          <div className=\"bg-gradient-to-r from-green-50 to-emerald-50/30 px-8 py-6 border-b border-green-200/50 flex-shrink-0\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"flex items-center gap-4\">\r\n                <div className=\"w-12 h-12 bg-gradient-to-br from-green-500 to-emerald-600 rounded-2xl flex items-center justify-center shadow-lg\">\r\n                  <span className=\"text-white text-xl\">🌱</span>\r\n                </div>\r\n                <div>\r\n                  <h3 className=\"text-2xl font-bold bg-gradient-to-r from-slate-800 to-slate-600 bg-clip-text text-transparent\">\r\n                    {pepiniereComplete?.nom || 'Pépinière'}\r\n                  </h3>\r\n                  <p className=\"text-slate-500 text-sm font-medium\">Détails de la pépinière</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"flex items-center gap-3\">\r\n                {/* Export Button */}\r\n                <button\r\n                  onClick={exportToCsv}\r\n                  className=\"group relative inline-flex items-center gap-2 bg-gradient-to-r from-green-500 to-emerald-600 hover:from-green-600 hover:to-emerald-700 text-white px-4 py-2.5 rounded-xl font-medium shadow-lg hover:shadow-xl transition-all duration-200 transform hover:scale-105\"\r\n                  title=\"Exporter en CSV\"\r\n                >\r\n                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n                  </svg>\r\n                  <span className=\"hidden sm:inline\">Exporter</span>\r\n                </button>\r\n                {/* Close Button */}\r\n                <button\r\n                  onClick={onClose}\r\n                  className=\"group relative w-10 h-10 bg-slate-100 hover:bg-red-50 text-slate-400 hover:text-red-500 rounded-xl transition-all duration-200 transform hover:scale-105 flex items-center justify-center\"\r\n                >\r\n                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Loading State */}\r\n          {pepiniereLoading && (\r\n            <div className=\"flex flex-col items-center justify-center py-16 bg-gradient-to-br from-emerald-50 to-teal-50 flex-1\">\r\n              <div className=\"relative\">\r\n                <div className=\"w-12 h-12 border-4 border-emerald-200 rounded-full animate-spin border-t-emerald-600\"></div>\r\n                <div className=\"w-8 h-8 border-4 border-transparent border-t-emerald-400 rounded-full animate-spin absolute top-2 left-2\"></div>\r\n              </div>\r\n              <p className=\"mt-4 text-slate-600 font-medium\">Chargement des détails...</p>\r\n            </div>\r\n          )}\r\n\r\n          {/* Error State */}\r\n          {pepiniereError && (\r\n            <div className=\"m-6 bg-gradient-to-r from-red-50 to-pink-50 border border-red-200 rounded-2xl p-6 flex-1\">\r\n              <div className=\"flex items-center gap-3\">\r\n                <div className=\"w-10 h-10 bg-red-100 rounded-full flex items-center justify-center\">\r\n                  <span className=\"text-red-600 text-lg\">⚠️</span>\r\n                </div>\r\n                <div>\r\n                  <h4 className=\"text-red-800 font-semibold\">Erreur de chargement</h4>\r\n                  <p className=\"text-red-600 text-sm\">{pepiniereError.message}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Content */}\r\n          {!pepiniereLoading && !pepiniereError && (\r\n            <div className=\"flex flex-col flex-1 min-h-0\">\r\n              {/* Navigation Tabs */}\r\n              <div className=\"px-8 pt-6 flex-shrink-0\">\r\n                <div className=\"flex gap-2 bg-slate-100/60 p-1.5 rounded-2xl backdrop-blur-sm\">\r\n                  {tabs.map((tab) => (\r\n                    <button\r\n                      key={tab.id}\r\n                      onClick={() => setActiveTab(tab.id)}\r\n                      className={`flex items-center gap-2 px-6 py-3 rounded-xl font-medium text-sm transition-all duration-200 relative overflow-hidden ${\r\n                        activeTab === tab.id\r\n                          ? 'bg-white text-emerald-600 shadow-lg shadow-emerald-500/10 border border-emerald-100'\r\n                          : 'text-slate-600 hover:text-slate-800 hover:bg-white/50'\r\n                      }`}\r\n                    >\r\n                      <span className=\"text-base\">{tab.icon}</span>\r\n                      <span>{tab.label}</span>\r\n                      {tab.count !== undefined && (\r\n                        <span className={`px-2 py-0.5 rounded-full text-xs font-bold ${\r\n                          activeTab === tab.id \r\n                            ? 'bg-emerald-100 text-emerald-600' \r\n                            : 'bg-slate-200 text-slate-600'\r\n                        }`}>\r\n                          {tab.count}\r\n                        </span>\r\n                      )}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Tab Content - Zone scrollable */}\r\n              <div className=\"px-8 py-6 flex-1 overflow-y-auto scrollbar-thin scrollbar-thumb-slate-300 scrollbar-track-transparent\">\r\n                {activeTab === 'info' && (\r\n                  <div className=\"space-y-8\">\r\n                    {/* Informations principales */}\r\n                    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n                      {/* Informations générales */}\r\n                      <div className=\"bg-gradient-to-br from-blue-50/50 to-indigo-50/30 rounded-2xl p-6 border border-blue-100/50\">\r\n                        <div className=\"flex items-center gap-3 mb-4\">\r\n                          <div className=\"w-8 h-8 bg-blue-500 rounded-lg flex items-center justify-center\">\r\n                            <span className=\"text-white text-sm\">📍</span>\r\n                          </div>\r\n                          <h4 className=\"text-lg font-bold text-slate-800\">Informations générales</h4>\r\n                        </div>\r\n                        <div className=\"space-y-4\">\r\n                          {[\r\n                            { label: 'Nom', value: pepiniereComplete?.nom },\r\n                            { label: 'Adresse', value: pepiniereComplete?.adresse },\r\n                            { label: 'Latitude', value: pepiniereComplete?.latitude },\r\n                            { label: 'Longitude', value: pepiniereComplete?.longitude },\r\n                            { label: 'Nom du projet', value: pepiniereComplete?.nomProjet }\r\n                          ].map((item, index) => (\r\n                            <div key={index} className=\"flex justify-between items-start py-2 border-b border-blue-100/50 last:border-b-0\">\r\n                              <span className=\"text-slate-600 font-medium text-sm\">{item.label}</span>\r\n                              <span className=\"text-slate-800 font-semibold text-sm text-right max-w-[60%]\">\r\n                                {item.value || '-'}\r\n                              </span>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* Gestionnaire */}\r\n                      <div className=\"bg-gradient-to-br from-purple-50/50 to-violet-50/30 rounded-2xl p-6 border border-purple-100/50\">\r\n                        <div className=\"flex items-center gap-3 mb-4\">\r\n                          <div className=\"w-8 h-8 bg-purple-500 rounded-lg flex items-center justify-center\">\r\n                            <span className=\"text-white text-sm\">👤</span>\r\n                          </div>\r\n                          <h4 className=\"text-lg font-bold text-slate-800\">Gestionnaire</h4>\r\n                        </div>\r\n                        <div className=\"space-y-4\">\r\n                          {[\r\n                            { label: 'Nom', value: pepiniereComplete?.nomGestionnaire },\r\n                            { label: 'Poste', value: pepiniereComplete?.posteGestionnaire },\r\n                            { label: 'Téléphone', value: pepiniereComplete?.telephoneGestionnaire },\r\n                            { label: 'Email', value: pepiniereComplete?.emailGestionnaire }\r\n                          ].map((item, index) => (\r\n                            <div key={index} className=\"flex justify-between items-start py-2 border-b border-purple-100/50 last:border-b-0\">\r\n                              <span className=\"text-slate-600 font-medium text-sm\">{item.label}</span>\r\n                              <span className=\"text-slate-800 font-semibold text-sm text-right max-w-[60%]\">\r\n                                {item.value || '-'}\r\n                              </span>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* Production */}\r\n                      <div className=\"bg-gradient-to-br from-emerald-50/50 to-teal-50/30 rounded-2xl p-6 border border-emerald-100/50\">\r\n                        <div className=\"flex items-center gap-3 mb-4\">\r\n                          <div className=\"w-8 h-8 bg-emerald-500 rounded-lg flex items-center justify-center\">\r\n                            <span className=\"text-white text-sm\">🌿</span>\r\n                          </div>\r\n                          <h4 className=\"text-lg font-bold text-slate-800\">Production</h4>\r\n                        </div>\r\n                        <div className=\"space-y-4\">\r\n                          {[\r\n                            { label: 'Espèces produites', value: pepiniereComplete?.especesProduites },\r\n                            { label: 'Production générale', value: pepiniereComplete?.quantiteProductionGenerale }\r\n                          ].map((item, index) => (\r\n                            <div key={index} className=\"flex flex-col py-2 border-b border-emerald-100/50 last:border-b-0\">\r\n                              <span className=\"text-slate-600 font-medium text-sm mb-1\">{item.label}</span>\r\n                              <span className=\"text-slate-800 font-semibold text-sm whitespace-pre-wrap break-words bg-white/60 p-2 rounded-lg\">\r\n                                {item.value || '-'}\r\n                              </span>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* Membre */}\r\n                      <div className=\"bg-gradient-to-br from-orange-50/50 to-amber-50/30 rounded-2xl p-6 border border-orange-100/50\">\r\n                        <div className=\"flex items-center gap-3 mb-4\">\r\n                          <div className=\"w-8 h-8 bg-orange-500 rounded-lg flex items-center justify-center\">\r\n                            <span className=\"text-white text-sm\">🏛️</span>\r\n                          </div>\r\n                          <h4 className=\"text-lg font-bold text-slate-800\">Membre</h4>\r\n                        </div>\r\n                        <div className=\"flex items-center gap-4\">\r\n                          {pepiniereComplete?.user?.logo && (\r\n                            <div className=\"relative\">\r\n                              <img\r\n                                src={getLogoUrl(pepiniereComplete.user.logo)}\r\n                                alt=\"Logo\"\r\n                                className=\"w-16 h-16 rounded-2xl object-cover shadow-lg border-2 border-white\"\r\n                              />\r\n                              <div className=\"absolute -bottom-1 -right-1 w-6 h-6 bg-green-500 rounded-full border-2 border-white flex items-center justify-center\">\r\n                                <span className=\"text-white text-xs\">✓</span>\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                          <div className=\"flex-1\">\r\n                            <div className=\"text-lg font-bold text-slate-800\">\r\n                              {pepiniereComplete?.user?.nomInstitution || '-'}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Description */}\r\n                    {pepiniereComplete?.description && pepiniereComplete.description.trim() !== '' && (\r\n                      <div className=\"bg-gradient-to-br from-indigo-50/50 to-blue-50/30 rounded-2xl p-6 border border-indigo-100/50\">\r\n                        <div className=\"flex items-center gap-3 mb-4\">\r\n                          <div className=\"w-8 h-8 bg-indigo-500 rounded-lg flex items-center justify-center\">\r\n                            <span className=\"text-white text-sm\">📄</span>\r\n                          </div>\r\n                          <h4 className=\"text-lg font-bold text-slate-800\">Description</h4>\r\n                        </div>\r\n                        <p className=\"text-slate-700 leading-relaxed bg-white/60 p-4 rounded-xl border border-indigo-100/50 whitespace-pre-wrap break-words\">\r\n                          {pepiniereComplete.description}\r\n                        </p>\r\n                      </div>\r\n                    )}\r\n\r\n                    {/* Dates */}\r\n                    <div className=\"bg-gradient-to-br from-slate-50/50 to-gray-50/30 rounded-2xl p-6 border border-slate-100/50\">\r\n                      <div className=\"flex items-center gap-3 mb-4\">\r\n                        <div className=\"w-8 h-8 bg-slate-500 rounded-lg flex items-center justify-center\">\r\n                          <span className=\"text-white text-sm\">📅</span>\r\n                        </div>\r\n                        <h4 className=\"text-lg font-bold text-slate-800\">Informations temporelles</h4>\r\n                      </div>\r\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                        <div className=\"flex justify-between items-center py-2\">\r\n                          <span className=\"text-slate-600 font-medium text-sm\">Date de création</span>\r\n                          <span className=\"text-slate-800 font-semibold text-sm\">\r\n                            {formatDate(pepiniereComplete?.createdAt)}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"flex justify-between items-center py-2\">\r\n                          <span className=\"text-slate-600 font-medium text-sm\">Dernière modification</span>\r\n                          <span className=\"text-slate-800 font-semibold text-sm\">\r\n                            {formatDate(pepiniereComplete?.updatedAt)}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {activeTab === 'photos' && (\r\n                  <div className=\"space-y-6\">\r\n                    <div className=\"flex items-center gap-3\">\r\n                      <div className=\"w-8 h-8 bg-pink-500 rounded-lg flex items-center justify-center\">\r\n                        <span className=\"text-white text-sm\">📷</span>\r\n                      </div>\r\n                      <h4 className=\"text-xl font-bold text-slate-800\">Galerie photos</h4>\r\n                    </div>\r\n                    \r\n                    {Array.isArray(pepiniereComplete?.photos) && pepiniereComplete.photos.length > 0 ? (\r\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                        {pepiniereComplete.photos.map((photo, index) => (\r\n                          <div key={photo.id || index} className=\"group relative overflow-hidden rounded-2xl shadow-lg hover:shadow-2xl transition-all duration-300 transform hover:scale-105\">\r\n                            <img\r\n                              src={`${process.env.NEXT_PUBLIC_API_URL}/media/${photo.image}`}\r\n                              alt={photo.titre || `Photo ${index + 1}`}\r\n                              className=\"w-full h-56 object-cover\"\r\n                            />\r\n                            <div className=\"absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\r\n                            <div className=\"absolute bottom-3 left-3 bg-white/90 backdrop-blur-sm text-slate-800 text-sm font-semibold px-3 py-1.5 rounded-lg transform translate-y-4 group-hover:translate-y-0 transition-transform duration-300\">\r\n                              {photo.titre || `Photo ${index + 1}`}\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"text-center py-16\">\r\n                        <div className=\"w-24 h-24 bg-slate-100 rounded-full mx-auto mb-4 flex items-center justify-center\">\r\n                          <span className=\"text-4xl text-slate-400\">📷</span>\r\n                        </div>\r\n                        <p className=\"text-slate-500 font-medium\">Aucune photo disponible</p>\r\n                        <p className=\"text-slate-400 text-sm mt-1\">Les photos apparaîtront ici une fois ajoutées</p>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Footer - Fixe */}\r\n          <div className=\"bg-gradient-to-r from-emerald-50 to-teal-50/30 px-8 py-4 border-t border-emerald-200/50 flex-shrink-0\">\r\n            <div className=\"flex justify-end\">\r\n              <button\r\n                onClick={onClose}\r\n                className=\"group inline-flex items-center gap-2 bg-gradient-to-r from-slate-600 to-slate-700 hover:from-slate-700 hover:to-slate-800 text-white px-6 py-3 rounded-xl font-semibold shadow-lg hover:shadow-xl transition-all duration-200 transform hover:scale-105\"\r\n              >\r\n                <span>Fermer</span>\r\n                <svg className=\"w-4 h-4 transition-transform group-hover:translate-x-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 8l4 4m0 0l-4 4m4-4H3\" />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PepiniereDetailModal;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2157, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Fitahiana/Documents/GitHub/Agri-Geo/frontend/src/components/SiegeDetailModal.js"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState } from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { GET_SIEGE } from '../lib/graphql-queries';\r\nimport { getLogoUrl } from '../lib/utils';\r\n\r\nconst SiegeDetailModal = ({ siege, onClose }) => {\r\n  const [activeTab, setActiveTab] = useState('info');\r\n\r\n  // Charger les données complètes du siège\r\n  const { data: siegeData, loading: siegeLoading, error: siegeError } = useQuery(GET_SIEGE, {\r\n    variables: { id: siege?.id },\r\n    skip: !siege?.id,\r\n    fetchPolicy: 'cache-and-network'\r\n  });\r\n\r\n  // Utiliser les données complètes si disponibles, sinon les données de base\r\n  const siegeComplete = siegeData?.siege || siege;\r\n\r\n  if (!siege) return null;\r\n\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return '-';\r\n    return new Date(dateString).toLocaleDateString('fr-FR');\r\n  };\r\n\r\n  const exportToCsv = () => {\r\n    const data = [siegeComplete];\r\n    const csv = [\r\n      ['Nom', 'Adresse', 'Description', 'Latitude', 'Longitude', 'Membre', 'Créé le', 'Modifié le'],\r\n      [\r\n        siegeComplete?.nom || '',\r\n        siegeComplete?.adresse || '',\r\n        siegeComplete?.description || '',\r\n        siegeComplete?.latitude || '',\r\n        siegeComplete?.longitude || '',\r\n        siegeComplete?.user ? `${siegeComplete.user.firstName || ''} ${siegeComplete.user.lastName || ''}` : '',\r\n        siegeComplete?.createdAt || '',\r\n        siegeComplete?.updatedAt || ''\r\n      ]\r\n    ];\r\n    const blob = new Blob([\r\n      csv.map(row => row.map(cell => `\"${String(cell).replace(/\"/g, '\"\"')}\"`).join(',')).join('\\n')\r\n    ], { type: 'text/csv' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `siege_${siegeComplete?.nom || 'detail'}.csv`;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n  };\r\n\r\n  const tabs = [\r\n    { id: 'info', label: 'Informations', icon: '📋' },\r\n    { \r\n      id: 'photos', \r\n      label: 'Photos', \r\n      icon: '📷',\r\n      count: Array.isArray(siegeComplete?.photosBatiment) ? siegeComplete.photosBatiment.length : 0\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 overflow-hidden\">\r\n      {/* Backdrop avec effet de flou */}\r\n      <div \r\n        className=\"absolute inset-0 bg-black/20 backdrop-blur-sm transition-all duration-300\"\r\n        onClick={onClose}\r\n      />\r\n      \r\n      {/* Container principal */}\r\n      <div className=\"flex items-center justify-center min-h-screen p-4\">\r\n        <div className=\"relative bg-white/95 backdrop-blur-xl rounded-3xl shadow-2xl border border-white/20 w-full max-w-5xl max-h-[90vh] overflow-hidden animate-in slide-in-from-bottom-4 duration-300 flex flex-col\">\r\n          \r\n          {/* Header avec gradient subtil - Fixe */}\r\n          <div className=\"bg-gradient-to-r from-red-50 to-rose-50/30 px-8 py-6 border-b border-red-200/50 flex-shrink-0\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"flex items-center gap-4\">\r\n                <div className=\"w-12 h-12 bg-gradient-to-br from-red-500 to-rose-600 rounded-2xl flex items-center justify-center shadow-lg\">\r\n                  <span className=\"text-white text-xl\">🏢</span>\r\n                </div>\r\n                <div>\r\n                  <h3 className=\"text-2xl font-bold bg-gradient-to-r from-slate-800 to-slate-600 bg-clip-text text-transparent\">\r\n                    {siegeComplete?.nom || 'Siège'}\r\n                  </h3>\r\n                  <p className=\"text-slate-500 text-sm font-medium\">Détails du siège</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"flex items-center gap-3\">\r\n                {/* Export Button */}\r\n                <button\r\n                  onClick={exportToCsv}\r\n                  className=\"group relative inline-flex items-center gap-2 bg-gradient-to-r from-red-500 to-rose-600 hover:from-red-600 hover:to-rose-700 text-white px-4 py-2.5 rounded-xl font-medium shadow-lg hover:shadow-xl transition-all duration-200 transform hover:scale-105\"\r\n                  title=\"Exporter en CSV\"\r\n                >\r\n                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n                  </svg>\r\n                  <span className=\"hidden sm:inline\">Exporter</span>\r\n                </button>\r\n                {/* Close Button */}\r\n                <button\r\n                  onClick={onClose}\r\n                  className=\"group relative w-10 h-10 bg-slate-100 hover:bg-red-50 text-slate-400 hover:text-red-500 rounded-xl transition-all duration-200 transform hover:scale-105 flex items-center justify-center\"\r\n                >\r\n                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Loading State */}\r\n          {siegeLoading && (\r\n            <div className=\"flex flex-col items-center justify-center py-16 bg-gradient-to-br from-purple-50 to-violet-50 flex-1\">\r\n              <div className=\"relative\">\r\n                <div className=\"w-12 h-12 border-4 border-purple-200 rounded-full animate-spin border-t-purple-600\"></div>\r\n                <div className=\"w-8 h-8 border-4 border-transparent border-t-purple-400 rounded-full animate-spin absolute top-2 left-2\"></div>\r\n              </div>\r\n              <p className=\"mt-4 text-slate-600 font-medium\">Chargement des détails...</p>\r\n            </div>\r\n          )}\r\n\r\n          {/* Error State */}\r\n          {siegeError && (\r\n            <div className=\"m-6 bg-gradient-to-r from-red-50 to-pink-50 border border-red-200 rounded-2xl p-6 flex-1\">\r\n              <div className=\"flex items-center gap-3\">\r\n                <div className=\"w-10 h-10 bg-red-100 rounded-full flex items-center justify-center\">\r\n                  <span className=\"text-red-600 text-lg\">⚠️</span>\r\n                </div>\r\n                <div>\r\n                  <h4 className=\"text-red-800 font-semibold\">Erreur de chargement</h4>\r\n                  <p className=\"text-red-600 text-sm\">{siegeError.message}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Content */}\r\n          {!siegeLoading && !siegeError && (\r\n            <div className=\"flex flex-col flex-1 min-h-0\">\r\n              {/* Navigation Tabs */}\r\n              <div className=\"px-8 pt-6 flex-shrink-0\">\r\n                <div className=\"flex gap-2 bg-slate-100/60 p-1.5 rounded-2xl backdrop-blur-sm\">\r\n                  {tabs.map((tab) => (\r\n                    <button\r\n                      key={tab.id}\r\n                      onClick={() => setActiveTab(tab.id)}\r\n                      className={`flex items-center gap-2 px-6 py-3 rounded-xl font-medium text-sm transition-all duration-200 relative overflow-hidden ${\r\n                        activeTab === tab.id\r\n                          ? 'bg-white text-purple-600 shadow-lg shadow-purple-500/10 border border-purple-100'\r\n                          : 'text-slate-600 hover:text-slate-800 hover:bg-white/50'\r\n                      }`}\r\n                    >\r\n                      <span className=\"text-base\">{tab.icon}</span>\r\n                      <span>{tab.label}</span>\r\n                      {tab.count !== undefined && (\r\n                        <span className={`px-2 py-0.5 rounded-full text-xs font-bold ${\r\n                          activeTab === tab.id \r\n                            ? 'bg-purple-100 text-purple-600' \r\n                            : 'bg-slate-200 text-slate-600'\r\n                        }`}>\r\n                          {tab.count}\r\n                        </span>\r\n                      )}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Tab Content - Zone scrollable */}\r\n              <div className=\"px-8 py-6 flex-1 overflow-y-auto scrollbar-thin scrollbar-thumb-slate-300 scrollbar-track-transparent\">\r\n                {activeTab === 'info' && (\r\n                  <div className=\"space-y-8\">\r\n                    {/* Informations principales */}\r\n                    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n                      {/* Contact et Horaires */}\r\n                      <div className=\"bg-gradient-to-br from-blue-50/50 to-indigo-50/30 rounded-2xl p-6 border border-blue-100/50\">\r\n                        <div className=\"flex items-center gap-3 mb-4\">\r\n                          <div className=\"w-8 h-8 bg-blue-500 rounded-lg flex items-center justify-center\">\r\n                            <span className=\"text-white text-sm\">👥</span>\r\n                          </div>\r\n                          <h4 className=\"text-lg font-bold text-slate-800\">Contact & Horaires</h4>\r\n                        </div>\r\n                        <div className=\"space-y-4\">\r\n                          {[\r\n                            { label: 'Point de contact', value: siegeComplete?.nomPointContact },\r\n                            { label: 'Poste', value: siegeComplete?.poste },\r\n                            { label: 'Téléphone', value: siegeComplete?.telephone },\r\n                            { label: 'Email', value: siegeComplete?.email },\r\n                            { label: 'Horaire Matin', value: siegeComplete?.horaireMatin },\r\n                            { label: 'Horaire Après-midi', value: siegeComplete?.horaireApresMidi }\r\n                          ].map((item, index) => (\r\n                            <div key={index} className=\"flex justify-between items-start py-2 border-b border-blue-100/50 last:border-b-0\">\r\n                              <span className=\"text-slate-600 font-medium text-sm\">{item.label}</span>\r\n                              <span className=\"text-slate-800 font-semibold text-sm text-right max-w-[60%]\">\r\n                                {item.value || '-'}\r\n                              </span>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* Informations de base */}\r\n                      <div className=\"bg-gradient-to-br from-purple-50/50 to-violet-50/30 rounded-2xl p-6 border border-purple-100/50\">\r\n                        <div className=\"flex items-center gap-3 mb-4\">\r\n                          <div className=\"w-8 h-8 bg-purple-500 rounded-lg flex items-center justify-center\">\r\n                            <span className=\"text-white text-sm\">📝</span>\r\n                          </div>\r\n                          <h4 className=\"text-lg font-bold text-slate-800\">Informations de base</h4>\r\n                        </div>\r\n                        <div className=\"space-y-4\">\r\n                          {[ \r\n                            { label: 'Nom', value: siegeComplete?.nom },\r\n                            { label: 'Projet', value: siegeComplete?.nomProjet },\r\n                            { label: 'Adresse', value: siegeComplete?.adresse },\r\n                            { label: 'Latitude', value: siegeComplete?.latitude },\r\n                            { label: 'Longitude', value: siegeComplete?.longitude }\r\n                          ].map((item, index) => (\r\n                            <div key={index} className=\"flex justify-between items-start py-2 border-b border-purple-100/50 last:border-b-0\">\r\n                              <span className=\"text-slate-600 font-medium text-sm\">{item.label}</span>\r\n                              <span className=\"text-slate-800 font-semibold text-sm text-right max-w-[60%] font-mono\">\r\n                                {item.value || '-'}\r\n                              </span>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* Membre */}\r\n                      <div className=\"bg-gradient-to-br from-emerald-50/50 to-teal-50/30 rounded-2xl p-6 border border-emerald-100/50\">\r\n                        <div className=\"flex items-center gap-3 mb-4\">\r\n                          <div className=\"w-8 h-8 bg-emerald-500 rounded-lg flex items-center justify-center\">\r\n                            <span className=\"text-white text-sm\">👤</span>\r\n                          </div>\r\n                          <h4 className=\"text-lg font-bold text-slate-800\">Membre</h4>\r\n                        </div>\r\n                        <div className=\"flex items-center gap-4\">\r\n                          {siegeComplete?.user?.logo && (\r\n                            <div className=\"relative\">\r\n                              <img\r\n                                src={getLogoUrl(siegeComplete.user.logo)}\r\n                                alt=\"Logo\"\r\n                                className=\"w-16 h-16 rounded-2xl object-cover shadow-lg border-2 border-white\"\r\n                              />\r\n                              <div className=\"absolute -bottom-1 -right-1 w-6 h-6 bg-green-500 rounded-full border-2 border-white flex items-center justify-center\">\r\n                                <span className=\"text-white text-xs\">✓</span>\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                          <div className=\"flex-1\">\r\n                            <div className=\"text-lg font-bold text-slate-800\">\r\n                              {siegeComplete?.user?.nomInstitution || '-'}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Description */}\r\n                    {siegeComplete?.description && siegeComplete.description.trim() !== '' && (\r\n                      <div className=\"bg-gradient-to-br from-amber-50/50 to-orange-50/30 rounded-2xl p-6 border border-amber-100/50\">\r\n                        <div className=\"flex items-center gap-3 mb-4\">\r\n                          <div className=\"w-8 h-8 bg-amber-500 rounded-lg flex items-center justify-center\">\r\n                            <span className=\"text-white text-sm\">📄</span>\r\n                          </div>\r\n                          <h4 className=\"text-lg font-bold text-slate-800\">Description</h4>\r\n                        </div>\r\n                        <p className=\"text-slate-700 leading-relaxed bg-white/60 p-4 rounded-xl border border-amber-100/50 whitespace-pre-wrap break-words\">\r\n                          {siegeComplete.description}\r\n                        </p>\r\n                      </div>\r\n                    )}\r\n\r\n                    {/* Dates */}\r\n                    <div className=\"bg-gradient-to-br from-slate-50/50 to-gray-50/30 rounded-2xl p-6 border border-slate-100/50\">\r\n                      <div className=\"flex items-center gap-3 mb-4\">\r\n                        <div className=\"w-8 h-8 bg-slate-500 rounded-lg flex items-center justify-center\">\r\n                          <span className=\"text-white text-sm\">📅</span>\r\n                        </div>\r\n                        <h4 className=\"text-lg font-bold text-slate-800\">Informations temporelles</h4>\r\n                      </div>\r\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                        <div className=\"flex justify-between items-center py-2\">\r\n                          <span className=\"text-slate-600 font-medium text-sm\">Dernière modification</span>\r\n                          <span className=\"text-slate-800 font-semibold text-sm\">\r\n                            {formatDate(siegeComplete?.updatedAt)}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {activeTab === 'photos' && (\r\n                  <div className=\"space-y-6\">\r\n                    <div className=\"flex items-center gap-3\">\r\n                      <div className=\"w-8 h-8 bg-pink-500 rounded-lg flex items-center justify-center\">\r\n                        <span className=\"text-white text-sm\">📷</span>\r\n                      </div>\r\n                      <h4 className=\"text-xl font-bold text-slate-800\">Galerie photos</h4>\r\n                    </div>\r\n                    \r\n                    {Array.isArray(siegeComplete?.photosBatiment) && siegeComplete.photosBatiment.length > 0 ? (\r\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                        {siegeComplete.photosBatiment.map((photo, index) => (\r\n                          <div key={photo.id || index} className=\"group relative overflow-hidden rounded-2xl shadow-lg hover:shadow-2xl transition-all duration-300 transform hover:scale-105\">\r\n                            <img\r\n                              src={`${process.env.NEXT_PUBLIC_API_URL}/media/${photo.image}`}\r\n                              alt={`Photo ${index + 1}`}\r\n                              className=\"w-full h-56 object-cover\"\r\n                            />\r\n                            <div className=\"absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\r\n                            <div className=\"absolute bottom-3 left-3 bg-white/90 backdrop-blur-sm text-slate-800 text-sm font-semibold px-3 py-1.5 rounded-lg transform translate-y-4 group-hover:translate-y-0 transition-transform duration-300\">\r\n                              Photo {index + 1}\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"text-center py-16\">\r\n                        <div className=\"w-24 h-24 bg-slate-100 rounded-full mx-auto mb-4 flex items-center justify-center\">\r\n                          <span className=\"text-4xl text-slate-400\">📷</span>\r\n                        </div>\r\n                        <p className=\"text-slate-500 font-medium\">Aucune photo disponible</p>\r\n                        <p className=\"text-slate-400 text-sm mt-1\">Les photos apparaîtront ici une fois ajoutées</p>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Footer - Fixe */}\r\n          <div className=\"bg-gradient-to-r from-slate-50 to-purple-50/30 px-8 py-4 border-t border-slate-200/50 flex-shrink-0\">\r\n            <div className=\"flex justify-end\">\r\n              <button\r\n                onClick={onClose}\r\n                className=\"group inline-flex items-center gap-2 bg-gradient-to-r from-slate-600 to-slate-700 hover:from-slate-700 hover:to-slate-800 text-white px-6 py-3 rounded-xl font-semibold shadow-lg hover:shadow-xl transition-all duration-200 transform hover:scale-105\"\r\n              >\r\n                <span>Fermer</span>\r\n                <svg className=\"w-4 h-4 transition-transform group-hover:translate-x-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 8l4 4m0 0l-4 4m4-4H3\" />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SiegeDetailModal;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3185, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Fitahiana/Documents/GitHub/Agri-Geo/frontend/src/components/ParcelleDetailModal.js"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState } from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { GET_PARCELLE } from '../lib/graphql-queries';\r\nimport { getLogoUrl } from '../lib/utils';\r\n\r\nconst ParcelleDetailModal = ({ parcelle, onClose }) => {\r\n  const [activeTab, setActiveTab] = useState('info');\r\n\r\n  // Charger les données complètes de la parcelle\r\n  const { data: parcelleData, loading: parcelleLoading, error: parcelleError } = useQuery(GET_PARCELLE, {\r\n    variables: { id: parcelle?.id },\r\n    skip: !parcelle?.id,\r\n    fetchPolicy: 'cache-and-network'\r\n  });\r\n\r\n  // Utiliser les données complètes si disponibles, sinon les données de base\r\n  const parcelleComplete = parcelleData?.parcelle || parcelle;\r\n\r\n  if (!parcelle) return null;\r\n\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return '-';\r\n    return new Date(dateString).toLocaleDateString('fr-FR');\r\n  };\r\n\r\n  const formatDecimal = (value) => {\r\n    if (!value) return '-';\r\n    return `${value}`;\r\n  };\r\n\r\n  // Fonction pour traiter les pratiques\r\n  const formatPratiques = (pratiques) => {\r\n    if (!pratiques) return [];\r\n    if (typeof pratiques === 'string') {\r\n      return pratiques.split(',').map(p => p.trim()).filter(p => p.length > 0);\r\n    }\r\n    return Array.isArray(pratiques) ? pratiques : [];\r\n  };\r\n\r\n  const exportToCsv = () => {\r\n    const data = [parcelleComplete];\r\n    const csv = [\r\n      ['Nom', 'Superficie', 'Pratique', 'Nom projet', 'Description', 'Créé le'],\r\n      [\r\n        parcelleComplete?.nom || '',\r\n        parcelleComplete?.superficie || '',\r\n        parcelleComplete?.pratique || '',\r\n        parcelleComplete?.nomProjet || '',\r\n        parcelleComplete?.description || '',\r\n        parcelleComplete?.createdAt || ''\r\n      ]\r\n    ];\r\n    const blob = new Blob([\r\n      csv.map(row => row.map(cell => `\"${String(cell).replace(/\"/g, '\"\"')}\"`).join(',')).join('\\n')\r\n    ], { type: 'text/csv' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `parcelle_${parcelleComplete?.nom || 'detail'}.csv`;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n  };\r\n\r\n  const tabs = [\r\n    { id: 'info', label: 'Informations', icon: '📋' },\r\n    { \r\n      id: 'photos', \r\n      label: 'Photos', \r\n      icon: '📷',\r\n      count: Array.isArray(parcelleComplete?.images) ? parcelleComplete.images.length : 0\r\n    },\r\n    { id: 'geometrie', label: 'Géométrie', icon: '📐' }\r\n  ];\r\n\r\n  const pratiques = formatPratiques(parcelleComplete?.pratique);\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 overflow-hidden\">\r\n      {/* Backdrop avec effet de flou */}\r\n      <div \r\n        className=\"absolute inset-0 bg-black/20 backdrop-blur-sm transition-all duration-300\"\r\n        onClick={onClose}\r\n      />\r\n      \r\n      {/* Container principal */}\r\n      <div className=\"flex items-center justify-center min-h-screen p-4\">\r\n        <div className=\"relative bg-white/95 backdrop-blur-xl rounded-3xl shadow-2xl border border-white/20 w-full max-w-5xl max-h-[90vh] overflow-hidden animate-in slide-in-from-bottom-4 duration-300 flex flex-col\">\r\n          \r\n          {/* Header avec gradient subtil - Fixe */}\r\n          <div className=\"bg-gradient-to-r from-slate-50 to-blue-50/30 px-8 py-6 border-b border-slate-200/50 flex-shrink-0\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"flex items-center gap-4\">\r\n                <div className=\"w-12 h-12 bg-gradient-to-br from-blue-500 to-indigo-600 rounded-2xl flex items-center justify-center shadow-lg\">\r\n                  <span className=\"text-white text-xl\">🏞️</span>\r\n                </div>\r\n                <div>\r\n                  <h3 className=\"text-2xl font-bold bg-gradient-to-r from-slate-800 to-slate-600 bg-clip-text text-transparent\">\r\n                    {parcelleComplete?.nom || 'Site de référence'}\r\n                  </h3>\r\n                  <p className=\"text-slate-500 text-sm font-medium\">Détails du site</p>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"flex items-center gap-3\">\r\n                {/* Export Button */}\r\n                <button\r\n                  onClick={exportToCsv}\r\n                  className=\"group relative inline-flex items-center gap-2 bg-gradient-to-r from-emerald-500 to-teal-600 hover:from-emerald-600 hover:to-teal-700 text-white px-4 py-2.5 rounded-xl font-medium shadow-lg hover:shadow-xl transition-all duration-200 transform hover:scale-105\"\r\n                  title=\"Exporter en CSV\"\r\n                >\r\n                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n                  </svg>\r\n                  <span className=\"hidden sm:inline\">Exporter</span>\r\n                </button>\r\n                \r\n                {/* Close Button */}\r\n                <button\r\n                  onClick={onClose}\r\n                  className=\"group relative w-10 h-10 bg-slate-100 hover:bg-red-50 text-slate-400 hover:text-red-500 rounded-xl transition-all duration-200 transform hover:scale-105 flex items-center justify-center\"\r\n                >\r\n                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Loading State */}\r\n          {parcelleLoading && (\r\n            <div className=\"flex flex-col items-center justify-center py-16 bg-gradient-to-br from-blue-50 to-indigo-50 flex-1\">\r\n              <div className=\"relative\">\r\n                <div className=\"w-12 h-12 border-4 border-blue-200 rounded-full animate-spin border-t-blue-600\"></div>\r\n                <div className=\"w-8 h-8 border-4 border-transparent border-t-blue-400 rounded-full animate-spin absolute top-2 left-2\"></div>\r\n              </div>\r\n              <p className=\"mt-4 text-slate-600 font-medium\">Chargement des détails...</p>\r\n            </div>\r\n          )}\r\n\r\n          {/* Error State */}\r\n          {parcelleError && (\r\n            <div className=\"m-6 bg-gradient-to-r from-red-50 to-pink-50 border border-red-200 rounded-2xl p-6 flex-1\">\r\n              <div className=\"flex items-center gap-3\">\r\n                <div className=\"w-10 h-10 bg-red-100 rounded-full flex items-center justify-center\">\r\n                  <span className=\"text-red-600 text-lg\">⚠️</span>\r\n                </div>\r\n                <div>\r\n                  <h4 className=\"text-red-800 font-semibold\">Erreur de chargement</h4>\r\n                  <p className=\"text-red-600 text-sm\">{parcelleError.message}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Content */}\r\n          {!parcelleLoading && !parcelleError && (\r\n            <div className=\"flex flex-col flex-1 min-h-0\">\r\n              {/* Navigation Tabs */}\r\n              <div className=\"px-8 pt-6 flex-shrink-0\">\r\n                <div className=\"flex gap-2 bg-slate-100/60 p-1.5 rounded-2xl backdrop-blur-sm\">\r\n                  {tabs.map((tab) => (\r\n                    <button\r\n                      key={tab.id}\r\n                      onClick={() => setActiveTab(tab.id)}\r\n                      className={`flex items-center gap-2 px-6 py-3 rounded-xl font-medium text-sm transition-all duration-200 relative overflow-hidden ${\r\n                        activeTab === tab.id\r\n                          ? 'bg-white text-blue-600 shadow-lg shadow-blue-500/10 border border-blue-100'\r\n                          : 'text-slate-600 hover:text-slate-800 hover:bg-white/50'\r\n                      }`}\r\n                    >\r\n                      <span className=\"text-base\">{tab.icon}</span>\r\n                      <span>{tab.label}</span>\r\n                      {tab.count !== undefined && (\r\n                        <span className={`px-2 py-0.5 rounded-full text-xs font-bold ${\r\n                          activeTab === tab.id \r\n                            ? 'bg-blue-100 text-blue-600' \r\n                            : 'bg-slate-200 text-slate-600'\r\n                        }`}>\r\n                          {tab.count}\r\n                        </span>\r\n                      )}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Tab Content - Zone scrollable */}\r\n              <div className=\"px-8 py-6 flex-1 overflow-y-auto scrollbar-thin scrollbar-thumb-slate-300 scrollbar-track-transparent\">\r\n                {activeTab === 'info' && (\r\n                  <div className=\"space-y-8\">\r\n                    {/* Informations principales */}\r\n                    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n                      {/* Informations de base (sans pratiques) */}\r\n                      <div className=\"bg-gradient-to-br from-blue-50/50 to-indigo-50/30 rounded-2xl p-6 border border-blue-100/50\">\r\n                        <div className=\"flex items-center gap-3 mb-4\">\r\n                          <div className=\"w-8 h-8 bg-blue-500 rounded-lg flex items-center justify-center\">\r\n                            <span className=\"text-white text-sm\">📝</span>\r\n                          </div>\r\n                          <h4 className=\"text-lg font-bold text-slate-800\">Informations de base</h4>\r\n                        </div>\r\n                        <div className=\"space-y-4\">\r\n                          {[\r\n                            { label: 'Nom', value: parcelleComplete?.nom },\r\n                            { label: 'Superficie', value: `${formatDecimal(parcelleComplete?.superficie)} ha` },\r\n                            { label: 'Nom projet', value: parcelleComplete?.nomProjet }\r\n                          ].map((item, index) => (\r\n                            <div key={index} className=\"flex justify-between items-start py-2 border-b border-blue-100/50 last:border-b-0\">\r\n                              <span className=\"text-slate-600 font-medium text-sm\">{item.label}</span>\r\n                              <span className=\"text-slate-800 font-semibold text-sm text-right max-w-[60%]\">\r\n                                {item.value || '-'}\r\n                              </span>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* Personne référente */}\r\n                      <div className=\"bg-gradient-to-br from-emerald-50/50 to-teal-50/30 rounded-2xl p-6 border border-emerald-100/50\">\r\n                        <div className=\"flex items-center gap-3 mb-4\">\r\n                          <div className=\"w-8 h-8 bg-emerald-500 rounded-lg flex items-center justify-center\">\r\n                            <span className=\"text-white text-sm\">👤</span>\r\n                          </div>\r\n                          <h4 className=\"text-lg font-bold text-slate-800\">Personne référente</h4>\r\n                        </div>\r\n                        <div className=\"space-y-4\">\r\n                          {[\r\n                            { label: 'Nom', value: parcelleComplete?.nomPersonneReferente },\r\n                            { label: 'Poste', value: parcelleComplete?.poste },\r\n                            { label: 'Téléphone', value: parcelleComplete?.telephone },\r\n                            { label: 'Email', value: parcelleComplete?.email }\r\n                          ].map((item, index) => (\r\n                            <div key={index} className=\"flex justify-between items-start py-2 border-b border-emerald-100/50 last:border-b-0\">\r\n                              <span className=\"text-slate-600 font-medium text-sm\">{item.label}</span>\r\n                              <span className=\"text-slate-800 font-semibold text-sm text-right max-w-[60%]\">\r\n                                {item.value || '-'}\r\n                              </span>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Section Pratiques - Nouvelle section dédiée */}\r\n                    {pratiques.length > 0 && (\r\n                      <div className=\"bg-gradient-to-br from-orange-50/50 to-amber-50/30 rounded-2xl p-6 border border-orange-100/50\">\r\n                        <div className=\"flex items-center gap-3 mb-4\">\r\n                          <div className=\"w-8 h-8 bg-orange-500 rounded-lg flex items-center justify-center\">\r\n                            <span className=\"text-white text-sm\">🌱</span>\r\n                          </div>\r\n                          <h4 className=\"text-lg font-bold text-slate-800\">Pratique</h4>\r\n                          <span className=\"bg-orange-100 text-orange-600 px-2 py-1 rounded-full text-xs font-bold\">\r\n                            {pratiques.length}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"flex flex-wrap gap-2\">\r\n                          {pratiques.map((pratique, index) => (\r\n                            <div\r\n                              key={index}\r\n                              className=\"inline-flex items-center gap-2 bg-white/70 hover:bg-white/90 border border-orange-200 rounded-xl px-4 py-2.5 shadow-sm hover:shadow-md transition-all duration-200 transform hover:scale-105\"\r\n                            >\r\n                              <span className=\"w-2 h-2 bg-orange-400 rounded-full\"></span>\r\n                              <span className=\"text-slate-700 font-medium text-sm\">\r\n                                {pratique}\r\n                              </span>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n\r\n                    {/* Membre */}\r\n                    <div className=\"bg-gradient-to-br from-purple-50/50 to-pink-50/30 rounded-2xl p-6 border border-purple-100/50\">\r\n                      <div className=\"flex items-center gap-3 mb-4\">\r\n                        <div className=\"w-8 h-8 bg-purple-500 rounded-lg flex items-center justify-center\">\r\n                          <span className=\"text-white text-sm\">👥</span>\r\n                        </div>\r\n                        <h4 className=\"text-lg font-bold text-slate-800\">Institution</h4>\r\n                      </div>\r\n                      <div className=\"flex items-center gap-4\">\r\n                        {parcelleComplete?.user?.logo && (\r\n                          <div className=\"relative\">\r\n                            <img\r\n                              src={getLogoUrl(parcelleComplete.user.logo)}\r\n                              alt=\"Logo\"\r\n                              className=\"w-16 h-16 rounded-2xl object-cover shadow-lg border-2 border-white\"\r\n                            />\r\n                            <div className=\"absolute -bottom-1 -right-1 w-6 h-6 bg-green-500 rounded-full border-2 border-white flex items-center justify-center\">\r\n                              <span className=\"text-white text-xs\">✓</span>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                        <div className=\"flex-1\">\r\n                          <div className=\"text-lg font-bold text-slate-800\">\r\n                            {parcelleComplete?.user?.nomInstitution || '-'}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Description */}\r\n                    {parcelleComplete?.description && (\r\n                      <div className=\"bg-gradient-to-br from-cyan-50/50 to-blue-50/30 rounded-2xl p-6 border border-cyan-100/50\">\r\n                        <div className=\"flex items-center gap-3 mb-4\">\r\n                          <div className=\"w-8 h-8 bg-cyan-500 rounded-lg flex items-center justify-center\">\r\n                            <span className=\"text-white text-sm\">📄</span>\r\n                          </div>\r\n                          <h4 className=\"text-lg font-bold text-slate-800\">Description</h4>\r\n                        </div>\r\n                        <p className=\"text-slate-700 leading-relaxed bg-white/60 p-4 rounded-xl border border-cyan-100/50 whitespace-pre-wrap break-words\">\r\n                          {parcelleComplete.description}\r\n                        </p>\r\n                      </div>\r\n                    )}\r\n\r\n                    {/* Dates */}\r\n                    <div className=\"bg-gradient-to-br from-slate-50/50 to-gray-50/30 rounded-2xl p-6 border border-slate-100/50\">\r\n                      <div className=\"flex items-center gap-3 mb-4\">\r\n                        <div className=\"w-8 h-8 bg-slate-500 rounded-lg flex items-center justify-center\">\r\n                          <span className=\"text-white text-sm\">📅</span>\r\n                        </div>\r\n                        <h4 className=\"text-lg font-bold text-slate-800\">Informations temporelles</h4>\r\n                      </div>\r\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                        <div className=\"flex justify-between items-center py-2\">\r\n                          <span className=\"text-slate-600 font-medium text-sm\">Dernière modification</span>\r\n                          <span className=\"text-slate-800 font-semibold text-sm\">\r\n                            {formatDate(parcelleComplete?.updatedAt)}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {activeTab === 'photos' && (\r\n                  <div className=\"space-y-6\">\r\n                    <div className=\"flex items-center gap-3\">\r\n                      <div className=\"w-8 h-8 bg-pink-500 rounded-lg flex items-center justify-center\">\r\n                        <span className=\"text-white text-sm\">📷</span>\r\n                      </div>\r\n                      <h4 className=\"text-xl font-bold text-slate-800\">Galerie photos</h4>\r\n                    </div>\r\n                    \r\n                    {Array.isArray(parcelleComplete?.images) && parcelleComplete.images.length > 0 ? (\r\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                        {parcelleComplete.images.map((image, index) => (\r\n                          <div key={image.id} className=\"group relative overflow-hidden rounded-2xl shadow-lg hover:shadow-2xl transition-all duration-300 transform hover:scale-105\">\r\n                            <img\r\n                              src={`${process.env.NEXT_PUBLIC_API_URL}/media/${image.image}`}\r\n                              alt={`Photo ${index + 1}`}\r\n                              className=\"w-full h-56 object-cover\"\r\n                            />\r\n                            <div className=\"absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\r\n                            <div className=\"absolute bottom-3 left-3 bg-white/90 backdrop-blur-sm text-slate-800 text-sm font-semibold px-3 py-1.5 rounded-lg transform translate-y-4 group-hover:translate-y-0 transition-transform duration-300\">\r\n                              Photo {index + 1}\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"text-center py-16\">\r\n                        <div className=\"w-24 h-24 bg-slate-100 rounded-full mx-auto mb-4 flex items-center justify-center\">\r\n                          <span className=\"text-4xl text-slate-400\">📷</span>\r\n                        </div>\r\n                        <p className=\"text-slate-500 font-medium\">Aucune photo disponible</p>\r\n                        <p className=\"text-slate-400 text-sm mt-1\">Les photos apparaîtront ici une fois ajoutées</p>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n\r\n                {activeTab === 'geometrie' && (\r\n                  <div className=\"space-y-6\">\r\n                    <div className=\"flex items-center gap-3\">\r\n                      <div className=\"w-8 h-8 bg-indigo-500 rounded-lg flex items-center justify-center\">\r\n                        <span className=\"text-white text-sm\">📐</span>\r\n                      </div>\r\n                      <h4 className=\"text-xl font-bold text-slate-800\">Données géométriques</h4>\r\n                    </div>\r\n                    \r\n                    {parcelleComplete?.geojson ? (\r\n                      <div className=\"space-y-6\">\r\n                        {/* GeoJSON Data */}\r\n                        <div className=\"bg-gradient-to-br from-slate-50 to-gray-50 rounded-2xl p-6 border border-slate-200\">\r\n                          <h5 className=\"text-lg font-semibold text-slate-700 mb-4 flex items-center gap-2\">\r\n                            <span className=\"text-green-600\">🗺️</span>\r\n                            Données GeoJSON\r\n                          </h5>\r\n                          <div className=\"bg-slate-900 rounded-xl p-4 overflow-x-auto\">\r\n                            <pre className=\"text-green-400 text-sm font-mono leading-relaxed\">\r\n                              {typeof parcelleComplete.geojson === 'object'\r\n                                ? JSON.stringify(parcelleComplete.geojson, null, 2)\r\n                                : parcelleComplete.geojson}\r\n                            </pre>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* Coordinates */}\r\n                        {parcelleComplete.geojson && typeof parcelleComplete.geojson === 'object' &&\r\n                          Array.isArray(parcelleComplete.geojson.features) &&\r\n                          parcelleComplete.geojson.features.length > 0 &&\r\n                          Array.isArray(parcelleComplete.geojson.features[0].geometry?.coordinates) && (\r\n                            <div className=\"bg-gradient-to-br from-blue-50 to-indigo-50 rounded-2xl p-6 border border-blue-200\">\r\n                              <h5 className=\"text-lg font-semibold text-slate-700 mb-4 flex items-center gap-2\">\r\n                                <span className=\"text-blue-600\">📍</span>\r\n                                Coordonnées principales\r\n                              </h5>\r\n                              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\r\n                                {parcelleComplete.geojson.features[0].geometry.coordinates[0].map((coord, index) => (\r\n                                  <div key={index} className=\"bg-white/70 rounded-lg p-3 border border-blue-100\">\r\n                                    <div className=\"flex justify-between items-center\">\r\n                                      <span className=\"text-blue-600 font-semibold text-sm\">Point {index + 1}</span>\r\n                                      <span className=\"text-slate-700 font-mono text-sm\">\r\n                                        {Array.isArray(coord) && coord.length === 2 \r\n                                          ? `${coord[1].toFixed(6)}, ${coord[0].toFixed(6)}` \r\n                                          : JSON.stringify(coord)}\r\n                                      </span>\r\n                                    </div>\r\n                                  </div>\r\n                                ))}\r\n                              </div>\r\n                            </div>\r\n                        )}\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"text-center py-16\">\r\n                        <div className=\"w-24 h-24 bg-slate-100 rounded-full mx-auto mb-4 flex items-center justify-center\">\r\n                          <span className=\"text-4xl text-slate-400\">📐</span>\r\n                        </div>\r\n                        <p className=\"text-slate-500 font-medium\">Aucune géométrie disponible</p>\r\n                        <p className=\"text-slate-400 text-sm mt-1\">Les données géométriques apparaîtront ici une fois définies</p>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Footer - Fixe */}\r\n          <div className=\"bg-gradient-to-r from-slate-50 to-blue-50/30 px-8 py-4 border-t border-slate-200/50 flex-shrink-0\">\r\n            <div className=\"flex justify-end\">\r\n              <button\r\n                onClick={onClose}\r\n                className=\"group inline-flex items-center gap-2 bg-gradient-to-r from-slate-600 to-slate-700 hover:from-slate-700 hover:to-slate-800 text-white px-6 py-3 rounded-xl font-semibold shadow-lg hover:shadow-xl transition-all duration-200 transform hover:scale-105\"\r\n              >\r\n                <span>Fermer</span>\r\n                <svg className=\"w-4 h-4 transition-transform group-hover:translate-x-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 8l4 4m0 0l-4 4m4-4H3\" />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ParcelleDetailModal;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4491, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Fitahiana/Documents/GitHub/Agri-Geo/frontend/src/components/MapGlobal.js"],"sourcesContent":["import { useEffect, useRef, useState, useLayoutEffect } from 'react';\r\nimport dynamic from 'next/dynamic';\r\nimport 'react-image-gallery/styles/css/image-gallery.css';\r\nimport L from 'leaflet';\r\nimport React from 'react';\r\nimport PepiniereDetailModal from './PepiniereDetailModal';\r\nimport SiegeDetailModal from './SiegeDetailModal';\r\nimport ParcelleDetailModal from './ParcelleDetailModal';\r\n\r\nconst full3DIcon = new L.DivIcon({\r\n  className: '',\r\n  iconSize: [36, 42],\r\n  iconAnchor: [18, 42],\r\n  popupAnchor: [0, -36],\r\n  html: `\r\n    <svg width=\"36\" height=\"42\" viewBox=\"0 0 36 42\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <g filter=\"url(#shadow)\">\r\n        <path d=\"M18 2C10.268 2 4 8.268 4 16.001c0 7.732 11.09 22.13 13.97 25.89a2 2 0 0 0 3.06 0C20.91 38.13 32 23.733 32 16.001 32 8.268 25.732 2 18 2Z\" fill=\"#2563eb\"/>\r\n        <circle cx=\"18\" cy=\"16\" r=\"6\" fill=\"#fff\" stroke=\"#2563eb\" stroke-width=\"2\"/>\r\n      </g>\r\n      <defs>\r\n        <filter id=\"shadow\" x=\"0\" y=\"0\" width=\"36\" height=\"42\" filterUnits=\"userSpaceOnUse\" color-interpolation-filters=\"sRGB\">\r\n          <feDropShadow dx=\"0\" dy=\"2\" stdDeviation=\"2\" flood-color=\"#000\" flood-opacity=\"0.2\"/>\r\n        </filter>\r\n      </defs>\r\n    </svg>\r\n  `\r\n});\r\n\r\nconst redIcon = new L.Icon({\r\n  iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-red.png',\r\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\r\n  iconSize: [25, 41],\r\n  iconAnchor: [12, 41],\r\n  popupAnchor: [1, -34],\r\n  shadowSize: [41, 41]\r\n});\r\n\r\nconst greenIcon = new L.Icon({\r\n  iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-green.png',\r\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\r\n  iconSize: [25, 41],\r\n  iconAnchor: [12, 41],\r\n  popupAnchor: [1, -34],\r\n  shadowSize: [41, 41]\r\n});\r\n\r\nconst MapContainer = dynamic(() => import('react-leaflet').then(mod => mod.MapContainer), { ssr: false });\r\nconst TileLayer = dynamic(() => import('react-leaflet').then(mod => mod.TileLayer), { ssr: false });\r\nconst Marker = dynamic(() => import('react-leaflet').then(mod => mod.Marker), { ssr: false });\r\nconst Polygon = dynamic(() => import('react-leaflet').then(mod => mod.Polygon), { ssr: false });\r\n\r\nconst MADAGASCAR_CENTER = [-18.7669, 46.8691];\r\nconst MADAGASCAR_BOUNDS = [\r\n  [-25.6070, 43.2540],\r\n  [-11.9450, 50.4830]\r\n];\r\n\r\nconst mapStyles = {\r\n  street: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\r\n  satellite: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\r\n  hybrid: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}'\r\n};\r\n\r\nconst attribution = {\r\n  street: '© OpenStreetMap contributors',\r\n  satellite: 'Tiles © Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community',\r\n  hybrid: 'Tiles © Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'\r\n};\r\n\r\n// Configuration des niveaux de zoom maximum par style de carte - Optimisé pour Madagascar\r\nconst maxZoomLevels = {\r\n  street: 19,\r\n  satellite: 18, // Excellent niveau de détail pour Madagascar avec Esri\r\n  hybrid: 18\r\n};\r\n\r\nfunction parseGeojson(geojson) {\r\n  if (!geojson) return null;\r\n  if (typeof geojson === 'string') {\r\n    try { return JSON.parse(geojson); } catch { return null; }\r\n  }\r\n  return geojson;\r\n}\r\n\r\nexport default function MapGlobal({ parcelles = [], sieges = [], pepinieres = [], mapStyle = 'street', style, center }) {\r\n  const [selectedParcelle, setSelectedParcelle] = useState(null);\r\n  const [selectedSiege, setSelectedSiege] = useState(null);\r\n  const [selectedPepiniere, setSelectedPepiniere] = useState(null);\r\n  const [mapKey, setMapKey] = useState(0);\r\n  const mapRef = useRef(null);\r\n\r\n  useEffect(() => { setMapKey(prev => prev + 1); }, [parcelles, sieges, pepinieres]);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      if (mapRef.current) mapRef.current.invalidateSize();\r\n    }, 100);\r\n    return () => clearTimeout(timer);\r\n  }, [mapKey]);\r\n\r\n  useLayoutEffect(() => {\r\n    setTimeout(() => {\r\n      if (mapRef.current && mapRef.current.invalidateSize) mapRef.current.invalidateSize();\r\n    }, 200);\r\n  }, []);\r\n\r\n  const handleMapClick = () => {\r\n    setSelectedParcelle(null);\r\n    setSelectedSiege(null);\r\n    setSelectedPepiniere(null);\r\n  };\r\n\r\n  if (typeof window === 'undefined') {\r\n    return <div className=\"w-full h-full flex items-center justify-center bg-gray-100\"><div className=\"text-center\"><div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-indigo-600 mx-auto\"></div><p className=\"mt-2 text-gray-600\">Chargement de la carte...</p></div></div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full h-full relative flex\" style={{ height: style?.height || '100%', width: style?.width || '100%', minHeight: style?.height ? undefined : '400px', minWidth: style?.width ? undefined : undefined, margin: 0, padding: 0 }}>\r\n      <MapContainer\r\n        ref={mapRef}\r\n        key={mapKey}\r\n        center={center || MADAGASCAR_CENTER}\r\n        zoom={6}\r\n        style={{ height: '100%', width: '100%', minHeight: style?.height ? undefined : '400px', minWidth: style?.width ? undefined : undefined }}\r\n        className=\"z-0\"\r\n        maxBounds={MADAGASCAR_BOUNDS}\r\n        maxBoundsViscosity={1.0}\r\n        maxZoom={maxZoomLevels[mapStyle]}\r\n        whenReady={() => { setTimeout(() => { if (mapRef.current && mapRef.current.invalidateSize) { mapRef.current.invalidateSize(); } }, 200); }}\r\n        onClick={handleMapClick}\r\n      >\r\n        <TileLayer url={mapStyles[mapStyle]} attribution={attribution[mapStyle]} maxZoom={maxZoomLevels[mapStyle]} />\r\n        {mapStyle === 'satellite' && (\r\n          <TileLayer \r\n            url=\"https://server.arcgisonline.com/ArcGIS/rest/services/Reference/World_Boundaries_and_Places/MapServer/tile/{z}/{y}/{x}\" \r\n            attribution=\"Labels © Esri\" \r\n            maxZoom={maxZoomLevels[mapStyle]} \r\n            opacity={0.8}\r\n          />\r\n        )}\r\n        {mapStyle === 'hybrid' && (\r\n          <TileLayer \r\n            url=\"https://server.arcgisonline.com/ArcGIS/rest/services/Reference/World_Boundaries_and_Places/MapServer/tile/{z}/{y}/{x}\" \r\n            attribution=\"Labels © Esri\" \r\n            opacity={0.9} \r\n            maxZoom={maxZoomLevels[mapStyle]} \r\n          />\r\n        )}\r\n        {/* Parcelles */}\r\n        {Array.isArray(parcelles) && parcelles.map((parcelle) => {\r\n          const geojson = parseGeojson(parcelle.geojson);\r\n          let polygons = [];\r\n          let center = null;\r\n          if (geojson) {\r\n            if (geojson.type === 'Polygon' && geojson.coordinates) {\r\n              polygons = [geojson.coordinates[0].map(coord => [coord[1], coord[0]])];\r\n              center = geojson.coordinates[0].reduce((acc, coord) => [acc[0] + coord[0], acc[1] + coord[1]], [0, 0]);\r\n              center = [center[1] / geojson.coordinates[0].length, center[0] / geojson.coordinates[0].length];\r\n            } else if (geojson.type === 'MultiPolygon' && geojson.coordinates) {\r\n              polygons = geojson.coordinates.map(poly => poly[0].map(coord => [coord[1], coord[0]]));\r\n              // Calculer le centre du premier polygone pour le marker\r\n              if (geojson.coordinates[0] && geojson.coordinates[0][0]) {\r\n                const coords = geojson.coordinates[0][0];\r\n                center = coords.reduce((acc, coord) => [acc[0] + coord[0], acc[1] + coord[1]], [0, 0]);\r\n                center = [center[1] / coords.length, center[0] / coords.length];\r\n              }\r\n            }\r\n          }\r\n          return (\r\n            <React.Fragment key={parcelle.id}>\r\n              {polygons.map((positions, idx) => (\r\n                <Polygon\r\n                  key={parcelle.id + '-' + idx}\r\n                  positions={positions}\r\n                  pathOptions={{ color: '#3b82f6', weight: 2, fillOpacity: 0.2 }}\r\n                  eventHandlers={{\r\n                    click: () => {\r\n                      setSelectedParcelle(parcelle);\r\n                      if (mapRef.current && positions) {\r\n                        const maxZoomForFit = Math.min(maxZoomLevels[mapStyle], 17);\r\n                        mapRef.current.fitBounds(positions, { maxZoom: maxZoomForFit, padding: [40, 40] });\r\n                      }\r\n                    }\r\n                  }}\r\n                />\r\n              ))}\r\n              {center && (\r\n                <Marker position={center} icon={full3DIcon} eventHandlers={{\r\n                  click: () => {\r\n                    setSelectedParcelle(parcelle);\r\n                    if (mapRef.current && center) {\r\n                      const zoomLevel = Math.min(maxZoomLevels[mapStyle], 17);\r\n                      mapRef.current.setView(center, zoomLevel, { animate: true });\r\n                    }\r\n                  }\r\n                }} />\r\n              )}\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n        {/* Sièges */}\r\n        {Array.isArray(sieges) && sieges.map((siege) => (\r\n          <Marker\r\n            key={siege.id}\r\n            position={[parseFloat(siege.latitude), parseFloat(siege.longitude)]}\r\n            icon={redIcon}\r\n            eventHandlers={{\r\n              click: () => {\r\n                setSelectedSiege(siege);\r\n                if (mapRef.current) {\r\n                  const zoomLevel = Math.min(maxZoomLevels[mapStyle], 17);\r\n                  mapRef.current.setView([parseFloat(siege.latitude), parseFloat(siege.longitude)], zoomLevel, { animate: true });\r\n                }\r\n              }\r\n            }}\r\n          />\r\n        ))}\r\n        {/* Pépinières */}\r\n        {Array.isArray(pepinieres) && pepinieres.map((pepiniere) => (\r\n          <Marker\r\n            key={pepiniere.id}\r\n            position={[parseFloat(pepiniere.latitude), parseFloat(pepiniere.longitude)]}\r\n            icon={greenIcon}\r\n            eventHandlers={{\r\n              click: () => {\r\n                setSelectedPepiniere(pepiniere);\r\n                if (mapRef.current) {\r\n                  const zoomLevel = Math.min(maxZoomLevels[mapStyle], 17);\r\n                  mapRef.current.setView([parseFloat(pepiniere.latitude), parseFloat(pepiniere.longitude)], zoomLevel, { animate: true });\r\n                }\r\n              }\r\n            }}\r\n          />\r\n        ))}\r\n      </MapContainer>\r\n      {/* Panneau latéral pour chaque type d'entité */}\r\n      {selectedPepiniere && (\r\n        <PepiniereDetailModal\r\n          pepiniere={selectedPepiniere}\r\n          onClose={() => setSelectedPepiniere(null)}\r\n        />\r\n      )}\r\n      {selectedParcelle && (\r\n        <ParcelleDetailModal\r\n          parcelle={selectedParcelle}\r\n          onClose={() => setSelectedParcelle(null)}\r\n        />\r\n      )}\r\n      {selectedSiege && (\r\n        <SiegeDetailModal\r\n          siege={selectedSiege}\r\n          onClose={() => setSelectedSiege(null)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4727, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Fitahiana/Documents/GitHub/Agri-Geo/frontend/src/app/page.js"],"sourcesContent":["\"use client\";\r\nimport { useQuery } from '@apollo/client';\r\nimport { GET_ALL_PARCELLES, GET_ALL_SIEGES, GET_ALL_PEPINIERES, GET_ALL_USERS } from '../lib/graphql-queries';\r\nimport { useState } from 'react';\r\nimport MapGlobal from '../components/MapGlobal';\r\n\r\nexport default function HomePage() {\r\n  const { data: parcellesData, loading: parcellesLoading, error: parcellesError } = useQuery(GET_ALL_PARCELLES);\r\n  const { data: siegesData, loading: siegesLoading, error: siegesError } = useQuery(GET_ALL_SIEGES);\r\n  const { data: pepinieresData, loading: pepinieresLoading, error: pepinieresError } = useQuery(GET_ALL_PEPINIERES);\r\n  const { data: usersData } = useQuery(GET_ALL_USERS);\r\n  const [mapStyle, setMapStyle] = useState('street');\r\n  const [showParcelles, setShowParcelles] = useState(true);\r\n  const [showSieges, setShowSieges] = useState(true);\r\n  const [showPepinieres, setShowPepinieres] = useState(true);\r\n  const [search, setSearch] = useState('');\r\n  const [selectedMember, setSelectedMember] = useState('');\r\n\r\n  const allParcelles = parcellesData?.allParcelles || [];\r\n  const allSieges = siegesData?.allSieges || [];\r\n  const allPepinieres = pepinieresData?.allPepinieres || [];\r\n\r\n  // Filtrage combiné recherche + membre\r\n  function filterBySearchAndMember(items, search, memberId) {\r\n    return items.filter(item => {\r\n      const text = (item.nom || '') + ' ' + (item.user?.firstName || '') + ' ' + (item.user?.lastName || '');\r\n      const matchSearch = search ? text.toLowerCase().includes(search.toLowerCase()) : true;\r\n      const matchMember = memberId ? (item.user && item.user.id === memberId) : true;\r\n      return matchSearch && matchMember;\r\n    });\r\n  }\r\n\r\n  const parcelles = showParcelles ? filterBySearchAndMember(allParcelles, search, selectedMember) : [];\r\n  const sieges = showSieges ? filterBySearchAndMember(allSieges, search, selectedMember) : [];\r\n  const pepinieres = showPepinieres ? filterBySearchAndMember(allPepinieres, search, selectedMember) : [];\r\n\r\n  // Centre Madagascar par défaut\r\n  const MADAGASCAR_CENTER = [-18.7669, 46.8691];\r\n  const hasParcelles = parcelles && parcelles.length > 0;\r\n\r\n  return (\r\n    <div style={{ height: '100vh', width: '100vw', display: 'flex', flexDirection: 'column' }}>\r\n      <div className=\"bg-white flex flex-col md:flex-row md:items-center md:justify-between gap-4 px-6 py-4 border-b shadow-sm\" style={{ flex: '0 0 auto' }}>\r\n        <div className=\"flex items-center gap-2\">\r\n          <h1 className=\"ml-4 text-2xl font-extrabold text-blue-900\">Carte générale</h1>\r\n        </div>\r\n        <div className=\"flex flex-wrap items-center gap-4\">\r\n          {/* Recherche texte */}\r\n          <input\r\n            type=\"text\"\r\n            value={search}\r\n            onChange={e => setSearch(e.target.value)}\r\n            placeholder=\"Rechercher par nom, propriétaire...\"\r\n            className=\"px-3 py-2 border border-blue-200 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 bg-white text-blue-900 font-semibold shadow-sm\"\r\n          />\r\n          {/* Filtre membre */}\r\n          <select\r\n            value={selectedMember}\r\n            onChange={e => setSelectedMember(e.target.value)}\r\n            className=\"px-3 py-2 border border-blue-200 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 bg-white text-blue-900 font-semibold shadow-sm\"\r\n          >\r\n            <option value=\"\">Tous les institutions</option>\r\n            {usersData?.allUsers?.map(user => (\r\n              <option key={user.id} value={user.id}>\r\n                {user.nomInstitution}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <label className=\"flex items-center gap-2 text-blue-900 font-semibold bg-blue-50 px-3 py-2 rounded-lg border border-blue-100\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={showParcelles}\r\n              onChange={() => setShowParcelles(v => !v)}\r\n              className=\"accent-blue-600\"\r\n            />\r\n            Sites de référence\r\n            <span className=\"ml-1 text-xs bg-blue-200 text-blue-900 rounded px-2 py-0.5 font-bold\">{allParcelles.length}</span>\r\n          </label>\r\n          <label className=\"flex items-center gap-2 text-red-900 font-semibold bg-red-50 px-3 py-2 rounded-lg border border-red-100\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={showSieges}\r\n              onChange={() => setShowSieges(v => !v)}\r\n              className=\"accent-red-600\"\r\n            />\r\n            Locaux\r\n            <span className=\"ml-1 text-xs bg-red-200 text-red-900 rounded px-2 py-0.5 font-bold\">{allSieges.length}</span>\r\n          </label>\r\n          <label className=\"flex items-center gap-2 text-green-900 font-semibold bg-green-50 px-3 py-2 rounded-lg border border-green-100\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={showPepinieres}\r\n              onChange={() => setShowPepinieres(v => !v)}\r\n              className=\"accent-green-600\"\r\n            />\r\n            Pépinières\r\n            <span className=\"ml-1 text-xs bg-green-200 text-green-900 rounded px-2 py-0.5 font-bold\">{allPepinieres.length}</span>\r\n          </label>\r\n          <select\r\n            value={mapStyle}\r\n            onChange={e => setMapStyle(e.target.value)}\r\n            className=\"px-3 py-2 border border-blue-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 bg-white text-blue-900 font-semibold shadow-sm\"\r\n          >\r\n            <option value=\"street\">Carte routière</option>\r\n            <option value=\"satellite\">Satellite</option>\r\n            <option value=\"hybrid\">Hybride</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div style={{ flex: 1, minHeight: 0, height: '100%' }}>\r\n        {(parcellesLoading || siegesLoading || pepinieresLoading) ? (\r\n          <div className=\"flex items-center justify-center h-full text-lg text-blue-700 font-semibold\">Chargement de la carte...</div>\r\n        ) : parcellesError ? (\r\n          <div className=\"flex items-center justify-center h-full text-lg text-red-700 font-semibold\">Erreur d'accès aux parcelles : {parcellesError.message}</div>\r\n        ) : siegesError ? (\r\n          <div className=\"flex items-center justify-center h-full text-lg text-red-700 font-semibold\">Erreur d'accès aux sièges : {siegesError.message}</div>\r\n        ) : pepinieresError ? (\r\n          <div className=\"flex items-center justify-center h-full text-lg text-red-700 font-semibold\">Erreur d'accès aux pépinières : {pepinieresError.message}</div>\r\n        ) : (\r\n          <div style={{ height: '100%', width: '100%' }}>\r\n            <MapGlobal\r\n              parcelles={parcelles}\r\n              sieges={sieges}\r\n              pepinieres={pepinieres}\r\n              mapStyle={mapStyle}\r\n              style={{ height: '100%', width: '100%' }}\r\n              key={parcelles.length + '-' + sieges.length + '-' + pepinieres.length + '-' + mapStyle}\r\n              center={!hasParcelles ? MADAGASCAR_CENTER : undefined}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}